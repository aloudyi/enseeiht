/*
 * generated by Xtext 2.23.0
 */
package fr.n7.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import fr.n7.ide.contentassist.antlr.internal.InternalENIGMAParser;
import fr.n7.services.ENIGMAGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ENIGMAParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ENIGMAGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ENIGMAGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getJeuAccess().getGroup(), "rule__Jeu__Group__0");
			builder.put(grammarAccess.getJoueurAccess().getGroup(), "rule__Joueur__Group__0");
			builder.put(grammarAccess.getObjetAccess().getGroup(), "rule__Objet__Group__0");
			builder.put(grammarAccess.getTerritoireAccess().getGroup(), "rule__Territoire__Group__0");
			builder.put(grammarAccess.getChoixAccess().getGroup(), "rule__Choix__Group__0");
			builder.put(grammarAccess.getInteractionAccess().getGroup(), "rule__Interaction__Group__0");
			builder.put(grammarAccess.getPersonneAccess().getGroup(), "rule__Personne__Group__0");
			builder.put(grammarAccess.getLieuAccess().getGroup(), "rule__Lieu__Group__0");
			builder.put(grammarAccess.getCheminAccess().getGroup(), "rule__Chemin__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getReponseAccess().getGroup(), "rule__Reponse__Group__0");
			builder.put(grammarAccess.getJeuAccess().getNameAssignment_1(), "rule__Jeu__NameAssignment_1");
			builder.put(grammarAccess.getJeuAccess().getTerritoireAssignment_3(), "rule__Jeu__TerritoireAssignment_3");
			builder.put(grammarAccess.getJeuAccess().getJoueurAssignment_4(), "rule__Jeu__JoueurAssignment_4");
			builder.put(grammarAccess.getJoueurAccess().getNameAssignment_1(), "rule__Joueur__NameAssignment_1");
			builder.put(grammarAccess.getJoueurAccess().getObjetAssignment_5(), "rule__Joueur__ObjetAssignment_5");
			builder.put(grammarAccess.getObjetAccess().getNameAssignment_1(), "rule__Objet__NameAssignment_1");
			builder.put(grammarAccess.getObjetAccess().getTailleAssignment_4(), "rule__Objet__TailleAssignment_4");
			builder.put(grammarAccess.getTerritoireAccess().getNameAssignment_1(), "rule__Territoire__NameAssignment_1");
			builder.put(grammarAccess.getTerritoireAccess().getLieuDebutAssignment_4(), "rule__Territoire__LieuDebutAssignment_4");
			builder.put(grammarAccess.getTerritoireAccess().getLieuxFinAssignment_6(), "rule__Territoire__LieuxFinAssignment_6");
			builder.put(grammarAccess.getTerritoireAccess().getCheminsAssignment_9(), "rule__Territoire__CheminsAssignment_9");
			builder.put(grammarAccess.getChoixAccess().getReponsesAssignment_3(), "rule__Choix__ReponsesAssignment_3");
			builder.put(grammarAccess.getInteractionAccess().getNameAssignment_1(), "rule__Interaction__NameAssignment_1");
			builder.put(grammarAccess.getInteractionAccess().getChoixAssignment_3(), "rule__Interaction__ChoixAssignment_3");
			builder.put(grammarAccess.getPersonneAccess().getNameAssignment_1(), "rule__Personne__NameAssignment_1");
			builder.put(grammarAccess.getPersonneAccess().getTexteAssignment_3(), "rule__Personne__TexteAssignment_3");
			builder.put(grammarAccess.getPersonneAccess().getInteractionAssignment_4(), "rule__Personne__InteractionAssignment_4");
			builder.put(grammarAccess.getLieuAccess().getNameAssignment_1(), "rule__Lieu__NameAssignment_1");
			builder.put(grammarAccess.getLieuAccess().getPersonneAssignment_3(), "rule__Lieu__PersonneAssignment_3");
			builder.put(grammarAccess.getCheminAccess().getPrecedentAssignment_2(), "rule__Chemin__PrecedentAssignment_2");
			builder.put(grammarAccess.getCheminAccess().getSuivantAssignment_4(), "rule__Chemin__SuivantAssignment_4");
			builder.put(grammarAccess.getQualificationAccess().getQualificationAssignment(), "rule__Qualification__QualificationAssignment");
			builder.put(grammarAccess.getActionAccess().getTexteAssignment_1(), "rule__Action__TexteAssignment_1");
			builder.put(grammarAccess.getReponseAccess().getTexteAssignment_2(), "rule__Reponse__TexteAssignment_2");
			builder.put(grammarAccess.getReponseAccess().getActionAssignment_4(), "rule__Reponse__ActionAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ENIGMAGrammarAccess grammarAccess;

	@Override
	protected InternalENIGMAParser createParser() {
		InternalENIGMAParser result = new InternalENIGMAParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ENIGMAGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ENIGMAGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
