/*
 * generated by Xtext 2.25.0
 */
package fr.n7.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ENIGMAGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class JeuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Jeu");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJeuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cJeuelementAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cJeuelementJeuElementParserRuleCall_3_0 = (RuleCall)cJeuelementAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Jeu :
		//    'jeu' name = ID '{'
		//        jeuelement+= JeuElement*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'jeu' name = ID '{'
		//    jeuelement+= JeuElement*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'jeu'
		public Keyword getJeuKeyword_0() { return cJeuKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//jeuelement+= JeuElement*
		public Assignment getJeuelementAssignment_3() { return cJeuelementAssignment_3; }
		
		//JeuElement
		public RuleCall getJeuelementJeuElementParserRuleCall_3_0() { return cJeuelementJeuElementParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class JeuElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.JeuElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTerritoireParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cJoueurParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObjetParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cChoixParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cConnaissanceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLieuParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cReponseParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cActionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cInteractionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPersonneParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCheminParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cConditionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		//JeuElement :
		//    Territoire | Joueur | Objet | Choix | Connaissance | Lieu | Reponse | Action | Interaction | Personne | Chemin | Condition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Territoire | Joueur | Objet | Choix | Connaissance | Lieu | Reponse | Action | Interaction | Personne | Chemin | Condition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Territoire
		public RuleCall getTerritoireParserRuleCall_0() { return cTerritoireParserRuleCall_0; }
		
		//Joueur
		public RuleCall getJoueurParserRuleCall_1() { return cJoueurParserRuleCall_1; }
		
		//Objet
		public RuleCall getObjetParserRuleCall_2() { return cObjetParserRuleCall_2; }
		
		//Choix
		public RuleCall getChoixParserRuleCall_3() { return cChoixParserRuleCall_3; }
		
		//Connaissance
		public RuleCall getConnaissanceParserRuleCall_4() { return cConnaissanceParserRuleCall_4; }
		
		//Lieu
		public RuleCall getLieuParserRuleCall_5() { return cLieuParserRuleCall_5; }
		
		//Reponse
		public RuleCall getReponseParserRuleCall_6() { return cReponseParserRuleCall_6; }
		
		//Action
		public RuleCall getActionParserRuleCall_7() { return cActionParserRuleCall_7; }
		
		//Interaction
		public RuleCall getInteractionParserRuleCall_8() { return cInteractionParserRuleCall_8; }
		
		//Personne
		public RuleCall getPersonneParserRuleCall_9() { return cPersonneParserRuleCall_9; }
		
		//Chemin
		public RuleCall getCheminParserRuleCall_10() { return cCheminParserRuleCall_10; }
		
		//Condition
		public RuleCall getConditionParserRuleCall_11() { return cConditionParserRuleCall_11; }
	}
	public class JoueurElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Joueur");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJoueurKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLimiteKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLimiteAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLimiteINTTerminalRuleCall_4_0 = (RuleCall)cLimiteAssignment_4.eContents().get(0);
		private final Keyword cObjetsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cObjetsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cObjetsObjetParserRuleCall_7_0 = (RuleCall)cObjetsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cConnaissancesKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cConnaissancesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cConnaissancesConnaissanceParserRuleCall_11_0 = (RuleCall)cConnaissancesAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Joueur :
		//    'joueur' name = ID '{'
		//        'limite' limite = INT
		//        'objets' '{'
		//            objets += Objet*
		//        '}'
		//        'connaissances' '{'
		//            connaissances += Connaissance*
		//        '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'joueur' name = ID '{'
		//    'limite' limite = INT
		//    'objets' '{'
		//        objets += Objet*
		//    '}'
		//    'connaissances' '{'
		//        connaissances += Connaissance*
		//    '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'joueur'
		public Keyword getJoueurKeyword_0() { return cJoueurKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'limite'
		public Keyword getLimiteKeyword_3() { return cLimiteKeyword_3; }
		
		//limite = INT
		public Assignment getLimiteAssignment_4() { return cLimiteAssignment_4; }
		
		//INT
		public RuleCall getLimiteINTTerminalRuleCall_4_0() { return cLimiteINTTerminalRuleCall_4_0; }
		
		//'objets'
		public Keyword getObjetsKeyword_5() { return cObjetsKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//objets += Objet*
		public Assignment getObjetsAssignment_7() { return cObjetsAssignment_7; }
		
		//Objet
		public RuleCall getObjetsObjetParserRuleCall_7_0() { return cObjetsObjetParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'connaissances'
		public Keyword getConnaissancesKeyword_9() { return cConnaissancesKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//connaissances += Connaissance*
		public Assignment getConnaissancesAssignment_11() { return cConnaissancesAssignment_11; }
		
		//Connaissance
		public RuleCall getConnaissancesConnaissanceParserRuleCall_11_0() { return cConnaissancesConnaissanceParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ConnaissanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Connaissance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnaissanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cQualificationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cQualificationQualificationParserRuleCall_2_0 = (RuleCall)cQualificationAssignment_2.eContents().get(0);
		private final Keyword cEtatKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEtatvAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEtatvEtatVisibiliteEnumRuleCall_4_0 = (RuleCall)cEtatvAssignment_4.eContents().get(0);
		private final Assignment cEtatpAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEtatpEtatPossessionEnumRuleCall_5_0 = (RuleCall)cEtatpAssignment_5.eContents().get(0);
		
		//Connaissance:
		//    'connaissance' name = ID
		//    qualification = Qualification
		//    // HADCHI TDBL
		//    'etat' etatv = EtatVisibilite etatp = EtatPossession;
		@Override public ParserRule getRule() { return rule; }
		
		//'connaissance' name = ID
		//qualification = Qualification
		//// HADCHI TDBL
		//'etat' etatv = EtatVisibilite etatp = EtatPossession
		public Group getGroup() { return cGroup; }
		
		//'connaissance'
		public Keyword getConnaissanceKeyword_0() { return cConnaissanceKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//qualification = Qualification
		public Assignment getQualificationAssignment_2() { return cQualificationAssignment_2; }
		
		//Qualification
		public RuleCall getQualificationQualificationParserRuleCall_2_0() { return cQualificationQualificationParserRuleCall_2_0; }
		
		//// HADCHI TDBL
		//'etat'
		public Keyword getEtatKeyword_3() { return cEtatKeyword_3; }
		
		//etatv = EtatVisibilite
		public Assignment getEtatvAssignment_4() { return cEtatvAssignment_4; }
		
		//EtatVisibilite
		public RuleCall getEtatvEtatVisibiliteEnumRuleCall_4_0() { return cEtatvEtatVisibiliteEnumRuleCall_4_0; }
		
		//etatp = EtatPossession
		public Assignment getEtatpAssignment_5() { return cEtatpAssignment_5; }
		
		//EtatPossession
		public RuleCall getEtatpEtatPossessionEnumRuleCall_5_0() { return cEtatpEtatPossessionEnumRuleCall_5_0; }
	}
	public class ObjetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Objet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cOccurrenceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOccurrenceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOccurrenceINTTerminalRuleCall_3_0 = (RuleCall)cOccurrenceAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cTailleKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTailleAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTailleINTTerminalRuleCall_7_0 = (RuleCall)cTailleAssignment_7.eContents().get(0);
		private final Keyword cEtatKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEtatvAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEtatvEtatVisibiliteEnumRuleCall_9_0 = (RuleCall)cEtatvAssignment_9.eContents().get(0);
		private final Assignment cEtatpAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEtatpEtatPossessionEnumRuleCall_10_0 = (RuleCall)cEtatpAssignment_10.eContents().get(0);
		
		//Objet :
		//    'objet' name = ID "occurrence" occurrence = INT ',' 'de' 'taille' taille = INT
		//    // HADCHI TDBL
		//    'etat' etatv = EtatVisibilite etatp = EtatPossession
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'objet' name = ID "occurrence" occurrence = INT ',' 'de' 'taille' taille = INT
		//// HADCHI TDBL
		//'etat' etatv = EtatVisibilite etatp = EtatPossession
		public Group getGroup() { return cGroup; }
		
		//'objet'
		public Keyword getObjetKeyword_0() { return cObjetKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"occurrence"
		public Keyword getOccurrenceKeyword_2() { return cOccurrenceKeyword_2; }
		
		//occurrence = INT
		public Assignment getOccurrenceAssignment_3() { return cOccurrenceAssignment_3; }
		
		//INT
		public RuleCall getOccurrenceINTTerminalRuleCall_3_0() { return cOccurrenceINTTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'de'
		public Keyword getDeKeyword_5() { return cDeKeyword_5; }
		
		//'taille'
		public Keyword getTailleKeyword_6() { return cTailleKeyword_6; }
		
		//taille = INT
		public Assignment getTailleAssignment_7() { return cTailleAssignment_7; }
		
		//INT
		public RuleCall getTailleINTTerminalRuleCall_7_0() { return cTailleINTTerminalRuleCall_7_0; }
		
		//// HADCHI TDBL
		//'etat'
		public Keyword getEtatKeyword_8() { return cEtatKeyword_8; }
		
		//etatv = EtatVisibilite
		public Assignment getEtatvAssignment_9() { return cEtatvAssignment_9; }
		
		//EtatVisibilite
		public RuleCall getEtatvEtatVisibiliteEnumRuleCall_9_0() { return cEtatvEtatVisibiliteEnumRuleCall_9_0; }
		
		//etatp = EtatPossession
		public Assignment getEtatpAssignment_10() { return cEtatpAssignment_10; }
		
		//EtatPossession
		public RuleCall getEtatpEtatPossessionEnumRuleCall_10_0() { return cEtatpEtatPossessionEnumRuleCall_10_0; }
	}
	public class TerritoireElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Territoire");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerritoireKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDepartKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLieuDebutAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLieuDebutLieuParserRuleCall_4_0 = (RuleCall)cLieuDebutAssignment_4.eContents().get(0);
		private final Keyword cMilieuKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLieuxintermediairesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLieuxintermediairesLieuParserRuleCall_7_0 = (RuleCall)cLieuxintermediairesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cFinKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cLieuxFinAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cLieuxFinLieuParserRuleCall_11_0 = (RuleCall)cLieuxFinAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cCheminsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cCheminsAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cCheminsCheminParserRuleCall_15_0 = (RuleCall)cCheminsAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//Territoire :
		//    'territoire' name = ID '{'
		//        // HADCHI TBDL
		//        'depart' lieuDebut = Lieu
		//        // HADCHI TDBL
		//        'milieu' '{'
		//            lieuxintermediaires += Lieu*
		//        '}'
		//        // HADCHI TDBL
		//        'fin' '{'
		//            lieuxFin += Lieu*
		//        '}'
		//        'chemins' '{'
		//            chemins += Chemin*
		//        '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'territoire' name = ID '{'
		//    // HADCHI TBDL
		//    'depart' lieuDebut = Lieu
		//    // HADCHI TDBL
		//    'milieu' '{'
		//        lieuxintermediaires += Lieu*
		//    '}'
		//    // HADCHI TDBL
		//    'fin' '{'
		//        lieuxFin += Lieu*
		//    '}'
		//    'chemins' '{'
		//        chemins += Chemin*
		//    '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'territoire'
		public Keyword getTerritoireKeyword_0() { return cTerritoireKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//// HADCHI TBDL
		//'depart'
		public Keyword getDepartKeyword_3() { return cDepartKeyword_3; }
		
		//lieuDebut = Lieu
		public Assignment getLieuDebutAssignment_4() { return cLieuDebutAssignment_4; }
		
		//Lieu
		public RuleCall getLieuDebutLieuParserRuleCall_4_0() { return cLieuDebutLieuParserRuleCall_4_0; }
		
		//// HADCHI TDBL
		//'milieu'
		public Keyword getMilieuKeyword_5() { return cMilieuKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//lieuxintermediaires += Lieu*
		public Assignment getLieuxintermediairesAssignment_7() { return cLieuxintermediairesAssignment_7; }
		
		//Lieu
		public RuleCall getLieuxintermediairesLieuParserRuleCall_7_0() { return cLieuxintermediairesLieuParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//// HADCHI TDBL
		//'fin'
		public Keyword getFinKeyword_9() { return cFinKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//lieuxFin += Lieu*
		public Assignment getLieuxFinAssignment_11() { return cLieuxFinAssignment_11; }
		
		//Lieu
		public RuleCall getLieuxFinLieuParserRuleCall_11_0() { return cLieuxFinLieuParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'chemins'
		public Keyword getCheminsKeyword_13() { return cCheminsKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//chemins += Chemin*
		public Assignment getCheminsAssignment_15() { return cCheminsAssignment_15; }
		
		//Chemin
		public RuleCall getCheminsCheminParserRuleCall_15_0() { return cCheminsCheminParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class ChoixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Choix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReponsesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReponsesReponseParserRuleCall_3_0 = (RuleCall)cReponsesAssignment_3.eContents().get(0);
		private final Keyword cConditionsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConditionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cConditionsConditionCrossReference_6_0 = (CrossReference)cConditionsAssignment_6.eContents().get(0);
		private final RuleCall cConditionsConditionIDTerminalRuleCall_6_0_1 = (RuleCall)cConditionsConditionCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Choix:
		//    'choix' name = ID '{'
		//        reponses += Reponse*
		//        'conditions' '{'
		//            conditions += [Condition]*
		//        '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'choix' name = ID '{'
		//    reponses += Reponse*
		//    'conditions' '{'
		//        conditions += [Condition]*
		//    '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'choix'
		public Keyword getChoixKeyword_0() { return cChoixKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//reponses += Reponse*
		public Assignment getReponsesAssignment_3() { return cReponsesAssignment_3; }
		
		//Reponse
		public RuleCall getReponsesReponseParserRuleCall_3_0() { return cReponsesReponseParserRuleCall_3_0; }
		
		//'conditions'
		public Keyword getConditionsKeyword_4() { return cConditionsKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//conditions += [Condition]*
		public Assignment getConditionsAssignment_6() { return cConditionsAssignment_6; }
		
		//[Condition]
		public CrossReference getConditionsConditionCrossReference_6_0() { return cConditionsConditionCrossReference_6_0; }
		
		//ID
		public RuleCall getConditionsConditionIDTerminalRuleCall_6_0_1() { return cConditionsConditionIDTerminalRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInteractionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cChoixAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cChoixChoixParserRuleCall_3_0 = (RuleCall)cChoixAssignment_3.eContents().get(0);
		private final Assignment cChoixFinAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cChoixFinChoixParserRuleCall_4_0 = (RuleCall)cChoixFinAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Interaction :
		//    'interaction' name = ID '{'
		//        choix = Choix
		//        choixFin = Choix
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'interaction' name = ID '{'
		//    choix = Choix
		//    choixFin = Choix
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'interaction'
		public Keyword getInteractionKeyword_0() { return cInteractionKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//choix = Choix
		public Assignment getChoixAssignment_3() { return cChoixAssignment_3; }
		
		//Choix
		public RuleCall getChoixChoixParserRuleCall_3_0() { return cChoixChoixParserRuleCall_3_0; }
		
		//choixFin = Choix
		public Assignment getChoixFinAssignment_4() { return cChoixFinAssignment_4; }
		
		//Choix
		public RuleCall getChoixFinChoixParserRuleCall_4_0() { return cChoixFinChoixParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PersonneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Personne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersonneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cEtatoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEtatoEtatObligationEnumRuleCall_2_0 = (RuleCall)cEtatoAssignment_2.eContents().get(0);
		private final Assignment cConditionoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cConditionoConditionCrossReference_3_0 = (CrossReference)cConditionoAssignment_3.eContents().get(0);
		private final RuleCall cConditionoConditionIDTerminalRuleCall_3_0_1 = (RuleCall)cConditionoConditionCrossReference_3_0.eContents().get(1);
		private final Assignment cEtatvAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEtatvEtatVisibiliteEnumRuleCall_4_0 = (RuleCall)cEtatvAssignment_4.eContents().get(0);
		private final Assignment cConditionvAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cConditionvConditionCrossReference_5_0 = (CrossReference)cConditionvAssignment_5.eContents().get(0);
		private final RuleCall cConditionvConditionIDTerminalRuleCall_5_0_1 = (RuleCall)cConditionvConditionCrossReference_5_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTexteAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTexteQualificationParserRuleCall_7_0 = (RuleCall)cTexteAssignment_7.eContents().get(0);
		private final Assignment cInteractionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cInteractionInteractionParserRuleCall_8_0 = (RuleCall)cInteractionAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Personne :
		//    // HADCHI TDBL
		//    'personne' name = ID etato = EtatObligation conditiono = [Condition] etatv = EtatVisibilite conditionv = [Condition] '{'
		//        texte = Qualification
		//        (interaction = Interaction)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//// HADCHI TDBL
		//'personne' name = ID etato = EtatObligation conditiono = [Condition] etatv = EtatVisibilite conditionv = [Condition] '{'
		//    texte = Qualification
		//    (interaction = Interaction)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//// HADCHI TDBL
		//'personne'
		public Keyword getPersonneKeyword_0() { return cPersonneKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//etato = EtatObligation
		public Assignment getEtatoAssignment_2() { return cEtatoAssignment_2; }
		
		//EtatObligation
		public RuleCall getEtatoEtatObligationEnumRuleCall_2_0() { return cEtatoEtatObligationEnumRuleCall_2_0; }
		
		//conditiono = [Condition]
		public Assignment getConditionoAssignment_3() { return cConditionoAssignment_3; }
		
		//[Condition]
		public CrossReference getConditionoConditionCrossReference_3_0() { return cConditionoConditionCrossReference_3_0; }
		
		//ID
		public RuleCall getConditionoConditionIDTerminalRuleCall_3_0_1() { return cConditionoConditionIDTerminalRuleCall_3_0_1; }
		
		//etatv = EtatVisibilite
		public Assignment getEtatvAssignment_4() { return cEtatvAssignment_4; }
		
		//EtatVisibilite
		public RuleCall getEtatvEtatVisibiliteEnumRuleCall_4_0() { return cEtatvEtatVisibiliteEnumRuleCall_4_0; }
		
		//conditionv = [Condition]
		public Assignment getConditionvAssignment_5() { return cConditionvAssignment_5; }
		
		//[Condition]
		public CrossReference getConditionvConditionCrossReference_5_0() { return cConditionvConditionCrossReference_5_0; }
		
		//ID
		public RuleCall getConditionvConditionIDTerminalRuleCall_5_0_1() { return cConditionvConditionIDTerminalRuleCall_5_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//texte = Qualification
		public Assignment getTexteAssignment_7() { return cTexteAssignment_7; }
		
		//Qualification
		public RuleCall getTexteQualificationParserRuleCall_7_0() { return cTexteQualificationParserRuleCall_7_0; }
		
		//(interaction = Interaction)?
		public Assignment getInteractionAssignment_8() { return cInteractionAssignment_8; }
		
		//Interaction
		public RuleCall getInteractionInteractionParserRuleCall_8_0() { return cInteractionInteractionParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class LieuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Lieu");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLieuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPersonnesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPersonnesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPersonnesPersonneParserRuleCall_3_2_0 = (RuleCall)cPersonnesAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Lieu :
		//    'lieu' name = ID '{'
		//        ('personnes' '{'
		//            personnes += Personne*
		//        '}')?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'lieu' name = ID '{'
		//    ('personnes' '{'
		//        personnes += Personne*
		//    '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'lieu'
		public Keyword getLieuKeyword_0() { return cLieuKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('personnes' '{'
		//    personnes += Personne*
		//'}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'personnes'
		public Keyword getPersonnesKeyword_3_0() { return cPersonnesKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//personnes += Personne*
		public Assignment getPersonnesAssignment_3_2() { return cPersonnesAssignment_3_2; }
		
		//Personne
		public RuleCall getPersonnesPersonneParserRuleCall_3_2_0() { return cPersonnesPersonneParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CheminElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Chemin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheminKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEtatcAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEtatcEtatCheminEnumRuleCall_1_0 = (RuleCall)cEtatcAssignment_1.eContents().get(0);
		private final Assignment cConditioncAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cConditioncConditionCrossReference_2_0 = (CrossReference)cConditioncAssignment_2.eContents().get(0);
		private final RuleCall cConditioncConditionIDTerminalRuleCall_2_0_1 = (RuleCall)cConditioncConditionCrossReference_2_0.eContents().get(1);
		private final Assignment cEtatoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEtatoEtatObligationEnumRuleCall_3_0 = (RuleCall)cEtatoAssignment_3.eContents().get(0);
		private final Assignment cConditionoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cConditionoConditionCrossReference_4_0 = (CrossReference)cConditionoAssignment_4.eContents().get(0);
		private final RuleCall cConditionoConditionIDTerminalRuleCall_4_0_1 = (RuleCall)cConditionoConditionCrossReference_4_0.eContents().get(1);
		private final Assignment cEtatvAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEtatvEtatVisibiliteEnumRuleCall_5_0 = (RuleCall)cEtatvAssignment_5.eContents().get(0);
		private final Assignment cConditionvAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cConditionvConditionCrossReference_6_0 = (CrossReference)cConditionvAssignment_6.eContents().get(0);
		private final RuleCall cConditionvConditionIDTerminalRuleCall_6_0_1 = (RuleCall)cConditionvConditionCrossReference_6_0.eContents().get(1);
		private final Keyword cDeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPrecedentAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cPrecedentLieuCrossReference_8_0 = (CrossReference)cPrecedentAssignment_8.eContents().get(0);
		private final RuleCall cPrecedentLieuIDTerminalRuleCall_8_0_1 = (RuleCall)cPrecedentLieuCrossReference_8_0.eContents().get(1);
		private final Keyword cAKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSuivantAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cSuivantLieuCrossReference_10_0 = (CrossReference)cSuivantAssignment_10.eContents().get(0);
		private final RuleCall cSuivantLieuIDTerminalRuleCall_10_0_1 = (RuleCall)cSuivantLieuCrossReference_10_0.eContents().get(1);
		
		//Chemin :
		//    // HADCHI TBDL
		//    'chemin' etatc = EtatChemin conditionc = [Condition] etato = EtatObligation conditiono = [Condition] etatv = EtatVisibilite conditionv = [Condition] 'de' precedent = [Lieu] 'a' suivant = [Lieu];
		@Override public ParserRule getRule() { return rule; }
		
		//// HADCHI TBDL
		//'chemin' etatc = EtatChemin conditionc = [Condition] etato = EtatObligation conditiono = [Condition] etatv = EtatVisibilite conditionv = [Condition] 'de' precedent = [Lieu] 'a' suivant = [Lieu]
		public Group getGroup() { return cGroup; }
		
		//// HADCHI TBDL
		//'chemin'
		public Keyword getCheminKeyword_0() { return cCheminKeyword_0; }
		
		//etatc = EtatChemin
		public Assignment getEtatcAssignment_1() { return cEtatcAssignment_1; }
		
		//EtatChemin
		public RuleCall getEtatcEtatCheminEnumRuleCall_1_0() { return cEtatcEtatCheminEnumRuleCall_1_0; }
		
		//conditionc = [Condition]
		public Assignment getConditioncAssignment_2() { return cConditioncAssignment_2; }
		
		//[Condition]
		public CrossReference getConditioncConditionCrossReference_2_0() { return cConditioncConditionCrossReference_2_0; }
		
		//ID
		public RuleCall getConditioncConditionIDTerminalRuleCall_2_0_1() { return cConditioncConditionIDTerminalRuleCall_2_0_1; }
		
		//etato = EtatObligation
		public Assignment getEtatoAssignment_3() { return cEtatoAssignment_3; }
		
		//EtatObligation
		public RuleCall getEtatoEtatObligationEnumRuleCall_3_0() { return cEtatoEtatObligationEnumRuleCall_3_0; }
		
		//conditiono = [Condition]
		public Assignment getConditionoAssignment_4() { return cConditionoAssignment_4; }
		
		//[Condition]
		public CrossReference getConditionoConditionCrossReference_4_0() { return cConditionoConditionCrossReference_4_0; }
		
		//ID
		public RuleCall getConditionoConditionIDTerminalRuleCall_4_0_1() { return cConditionoConditionIDTerminalRuleCall_4_0_1; }
		
		//etatv = EtatVisibilite
		public Assignment getEtatvAssignment_5() { return cEtatvAssignment_5; }
		
		//EtatVisibilite
		public RuleCall getEtatvEtatVisibiliteEnumRuleCall_5_0() { return cEtatvEtatVisibiliteEnumRuleCall_5_0; }
		
		//conditionv = [Condition]
		public Assignment getConditionvAssignment_6() { return cConditionvAssignment_6; }
		
		//[Condition]
		public CrossReference getConditionvConditionCrossReference_6_0() { return cConditionvConditionCrossReference_6_0; }
		
		//ID
		public RuleCall getConditionvConditionIDTerminalRuleCall_6_0_1() { return cConditionvConditionIDTerminalRuleCall_6_0_1; }
		
		//'de'
		public Keyword getDeKeyword_7() { return cDeKeyword_7; }
		
		//precedent = [Lieu]
		public Assignment getPrecedentAssignment_8() { return cPrecedentAssignment_8; }
		
		//[Lieu]
		public CrossReference getPrecedentLieuCrossReference_8_0() { return cPrecedentLieuCrossReference_8_0; }
		
		//ID
		public RuleCall getPrecedentLieuIDTerminalRuleCall_8_0_1() { return cPrecedentLieuIDTerminalRuleCall_8_0_1; }
		
		//'a'
		public Keyword getAKeyword_9() { return cAKeyword_9; }
		
		//suivant = [Lieu]
		public Assignment getSuivantAssignment_10() { return cSuivantAssignment_10; }
		
		//[Lieu]
		public CrossReference getSuivantLieuCrossReference_10_0() { return cSuivantLieuCrossReference_10_0; }
		
		//ID
		public RuleCall getSuivantLieuIDTerminalRuleCall_10_0_1() { return cSuivantLieuIDTerminalRuleCall_10_0_1; }
	}
	public class QualificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Qualification");
		private final Assignment cQualificationAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cQualificationSTRINGTerminalRuleCall_0 = (RuleCall)cQualificationAssignment.eContents().get(0);
		
		//Qualification :
		//    qualification = STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//qualification = STRING
		public Assignment getQualificationAssignment() { return cQualificationAssignment; }
		
		//STRING
		public RuleCall getQualificationSTRINGTerminalRuleCall_0() { return cQualificationSTRINGTerminalRuleCall_0; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cObjetsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cCKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cObjetsconsommablesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cObjetsconsommablesObjetParserRuleCall_6_0 = (RuleCall)cObjetsconsommablesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cObjetsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cAKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cObjetsattribuablesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cObjetsattribuablesObjetParserRuleCall_11_0 = (RuleCall)cObjetsattribuablesAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cConnaissancesKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cAKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cConnaissancesattribuablesAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final CrossReference cConnaissancesattribuablesConnaissanceCrossReference_16_0 = (CrossReference)cConnaissancesattribuablesAssignment_16.eContents().get(0);
		private final RuleCall cConnaissancesattribuablesConnaissanceIDTerminalRuleCall_16_0_1 = (RuleCall)cConnaissancesattribuablesConnaissanceCrossReference_16_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//Action:
		//    'action' name = ID '{'
		//         'objets' 'c' '{'
		//             objetsconsommables += Objet*
		//         '}'
		//         'objets' 'a' '{'
		//             objetsattribuables += Objet*
		//         '}'
		//         'connaissances' 'a' '{'
		//             connaissancesattribuables += [Connaissance]*
		//         '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'action' name = ID '{'
		//     'objets' 'c' '{'
		//         objetsconsommables += Objet*
		//     '}'
		//     'objets' 'a' '{'
		//         objetsattribuables += Objet*
		//     '}'
		//     'connaissances' 'a' '{'
		//         connaissancesattribuables += [Connaissance]*
		//     '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'action'
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'objets'
		public Keyword getObjetsKeyword_3() { return cObjetsKeyword_3; }
		
		//'c'
		public Keyword getCKeyword_4() { return cCKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//objetsconsommables += Objet*
		public Assignment getObjetsconsommablesAssignment_6() { return cObjetsconsommablesAssignment_6; }
		
		//Objet
		public RuleCall getObjetsconsommablesObjetParserRuleCall_6_0() { return cObjetsconsommablesObjetParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'objets'
		public Keyword getObjetsKeyword_8() { return cObjetsKeyword_8; }
		
		//'a'
		public Keyword getAKeyword_9() { return cAKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//objetsattribuables += Objet*
		public Assignment getObjetsattribuablesAssignment_11() { return cObjetsattribuablesAssignment_11; }
		
		//Objet
		public RuleCall getObjetsattribuablesObjetParserRuleCall_11_0() { return cObjetsattribuablesObjetParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'connaissances'
		public Keyword getConnaissancesKeyword_13() { return cConnaissancesKeyword_13; }
		
		//'a'
		public Keyword getAKeyword_14() { return cAKeyword_14; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15() { return cLeftCurlyBracketKeyword_15; }
		
		//connaissancesattribuables += [Connaissance]*
		public Assignment getConnaissancesattribuablesAssignment_16() { return cConnaissancesattribuablesAssignment_16; }
		
		//[Connaissance]
		public CrossReference getConnaissancesattribuablesConnaissanceCrossReference_16_0() { return cConnaissancesattribuablesConnaissanceCrossReference_16_0; }
		
		//ID
		public RuleCall getConnaissancesattribuablesConnaissanceIDTerminalRuleCall_16_0_1() { return cConnaissancesattribuablesConnaissanceIDTerminalRuleCall_16_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class ReponseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Reponse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReponseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cGreaterThanSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cDeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cQualificationKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTexteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTexteQualificationParserRuleCall_5_0 = (RuleCall)cTexteAssignment_5.eContents().get(0);
		private final Keyword cAvecKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cActionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cActionActionCrossReference_7_0 = (CrossReference)cActionAssignment_7.eContents().get(0);
		private final RuleCall cActionActionIDTerminalRuleCall_7_0_1 = (RuleCall)cActionActionCrossReference_7_0.eContents().get(1);
		
		//Reponse :
		//    'reponse' '>>' name = ID 'de' 'qualification' texte = Qualification 'avec' action = [Action];
		@Override public ParserRule getRule() { return rule; }
		
		//'reponse' '>>' name = ID 'de' 'qualification' texte = Qualification 'avec' action = [Action]
		public Group getGroup() { return cGroup; }
		
		//'reponse'
		public Keyword getReponseKeyword_0() { return cReponseKeyword_0; }
		
		//'>>'
		public Keyword getGreaterThanSignGreaterThanSignKeyword_1() { return cGreaterThanSignGreaterThanSignKeyword_1; }
		
		//name = ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'de'
		public Keyword getDeKeyword_3() { return cDeKeyword_3; }
		
		//'qualification'
		public Keyword getQualificationKeyword_4() { return cQualificationKeyword_4; }
		
		//texte = Qualification
		public Assignment getTexteAssignment_5() { return cTexteAssignment_5; }
		
		//Qualification
		public RuleCall getTexteQualificationParserRuleCall_5_0() { return cTexteQualificationParserRuleCall_5_0; }
		
		//'avec'
		public Keyword getAvecKeyword_6() { return cAvecKeyword_6; }
		
		//action = [Action]
		public Assignment getActionAssignment_7() { return cActionAssignment_7; }
		
		//[Action]
		public CrossReference getActionActionCrossReference_7_0() { return cActionActionCrossReference_7_0; }
		
		//ID
		public RuleCall getActionActionIDTerminalRuleCall_7_0_1() { return cActionActionIDTerminalRuleCall_7_0_1; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cObjKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cObjetsRequisAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cObjetsRequisObjetParserRuleCall_5_0 = (RuleCall)cObjetsRequisAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cConKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cConnaissancesRequisesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cConnaissancesRequisesConnaissanceCrossReference_9_0 = (CrossReference)cConnaissancesRequisesAssignment_9.eContents().get(0);
		private final RuleCall cConnaissancesRequisesConnaissanceIDTerminalRuleCall_9_0_1 = (RuleCall)cConnaissancesRequisesConnaissanceCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Condition :
		//    'condition' name = ID '{'
		//        'obj' '{'
		//            objetsRequis += Objet*
		//        '}'
		//        'con' '{'
		//            connaissancesRequises += [Connaissance]*
		//        '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'condition' name = ID '{'
		//    'obj' '{'
		//        objetsRequis += Objet*
		//    '}'
		//    'con' '{'
		//        connaissancesRequises += [Connaissance]*
		//    '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'condition'
		public Keyword getConditionKeyword_0() { return cConditionKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'obj'
		public Keyword getObjKeyword_3() { return cObjKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//objetsRequis += Objet*
		public Assignment getObjetsRequisAssignment_5() { return cObjetsRequisAssignment_5; }
		
		//Objet
		public RuleCall getObjetsRequisObjetParserRuleCall_5_0() { return cObjetsRequisObjetParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'con'
		public Keyword getConKeyword_7() { return cConKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//connaissancesRequises += [Connaissance]*
		public Assignment getConnaissancesRequisesAssignment_9() { return cConnaissancesRequisesAssignment_9; }
		
		//[Connaissance]
		public CrossReference getConnaissancesRequisesConnaissanceCrossReference_9_0() { return cConnaissancesRequisesConnaissanceCrossReference_9_0; }
		
		//ID
		public RuleCall getConnaissancesRequisesConnaissanceIDTerminalRuleCall_9_0_1() { return cConnaissancesRequisesConnaissanceIDTerminalRuleCall_9_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	
	public class EtatPossessionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.EtatPossession");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPossedeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPossedePossedeKeyword_0_0 = (Keyword)cPossedeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNpossedeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNpossedeNpossedeKeyword_1_0 = (Keyword)cNpossedeEnumLiteralDeclaration_1.eContents().get(0);
		
		//// HADCHI KAML LT7T TBDL
		//enum EtatPossession returns EtatPossession:
		//    possede = 'possede' | npossede = 'npossede';
		public EnumRule getRule() { return rule; }
		
		//possede = 'possede' | npossede = 'npossede'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//possede = 'possede'
		public EnumLiteralDeclaration getPossedeEnumLiteralDeclaration_0() { return cPossedeEnumLiteralDeclaration_0; }
		
		//'possede'
		public Keyword getPossedePossedeKeyword_0_0() { return cPossedePossedeKeyword_0_0; }
		
		//npossede = 'npossede'
		public EnumLiteralDeclaration getNpossedeEnumLiteralDeclaration_1() { return cNpossedeEnumLiteralDeclaration_1; }
		
		//'npossede'
		public Keyword getNpossedeNpossedeKeyword_1_0() { return cNpossedeNpossedeKeyword_1_0; }
	}
	public class EtatVisibiliteElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.EtatVisibilite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVisibleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVisibleVisibleKeyword_0_0 = (Keyword)cVisibleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNvisibleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNvisibleNvisibleKeyword_1_0 = (Keyword)cNvisibleEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EtatVisibilite returns EtatVisibilite:
		//    visible = 'visible' | nvisible = 'nvisible';
		public EnumRule getRule() { return rule; }
		
		//visible = 'visible' | nvisible = 'nvisible'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//visible = 'visible'
		public EnumLiteralDeclaration getVisibleEnumLiteralDeclaration_0() { return cVisibleEnumLiteralDeclaration_0; }
		
		//'visible'
		public Keyword getVisibleVisibleKeyword_0_0() { return cVisibleVisibleKeyword_0_0; }
		
		//nvisible = 'nvisible'
		public EnumLiteralDeclaration getNvisibleEnumLiteralDeclaration_1() { return cNvisibleEnumLiteralDeclaration_1; }
		
		//'nvisible'
		public Keyword getNvisibleNvisibleKeyword_1_0() { return cNvisibleNvisibleKeyword_1_0; }
	}
	public class EtatObligationElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.EtatObligation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cObligatoireEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cObligatoireObligatoireKeyword_0_0 = (Keyword)cObligatoireEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNobligatoireEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNobligatoireNobligatoireKeyword_1_0 = (Keyword)cNobligatoireEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EtatObligation returns EtatObligation:
		//    obligatoire = 'obligatoire' | nobligatoire = 'nobligatoire';
		public EnumRule getRule() { return rule; }
		
		//obligatoire = 'obligatoire' | nobligatoire = 'nobligatoire'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//obligatoire = 'obligatoire'
		public EnumLiteralDeclaration getObligatoireEnumLiteralDeclaration_0() { return cObligatoireEnumLiteralDeclaration_0; }
		
		//'obligatoire'
		public Keyword getObligatoireObligatoireKeyword_0_0() { return cObligatoireObligatoireKeyword_0_0; }
		
		//nobligatoire = 'nobligatoire'
		public EnumLiteralDeclaration getNobligatoireEnumLiteralDeclaration_1() { return cNobligatoireEnumLiteralDeclaration_1; }
		
		//'nobligatoire'
		public Keyword getNobligatoireNobligatoireKeyword_1_0() { return cNobligatoireNobligatoireKeyword_1_0; }
	}
	public class EtatCheminElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.ENIGMA.EtatChemin");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOuvertEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOuvertOuvertKeyword_0_0 = (Keyword)cOuvertEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFermeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFermeFermeKeyword_1_0 = (Keyword)cFermeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EtatChemin returns EtatChemin:
		//    ouvert = 'ouvert' | ferme = 'ferme';
		public EnumRule getRule() { return rule; }
		
		//ouvert = 'ouvert' | ferme = 'ferme'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ouvert = 'ouvert'
		public EnumLiteralDeclaration getOuvertEnumLiteralDeclaration_0() { return cOuvertEnumLiteralDeclaration_0; }
		
		//'ouvert'
		public Keyword getOuvertOuvertKeyword_0_0() { return cOuvertOuvertKeyword_0_0; }
		
		//ferme = 'ferme'
		public EnumLiteralDeclaration getFermeEnumLiteralDeclaration_1() { return cFermeEnumLiteralDeclaration_1; }
		
		//'ferme'
		public Keyword getFermeFermeKeyword_1_0() { return cFermeFermeKeyword_1_0; }
	}
	
	private final JeuElements pJeu;
	private final JeuElementElements pJeuElement;
	private final JoueurElements pJoueur;
	private final ConnaissanceElements pConnaissance;
	private final ObjetElements pObjet;
	private final TerritoireElements pTerritoire;
	private final ChoixElements pChoix;
	private final InteractionElements pInteraction;
	private final PersonneElements pPersonne;
	private final LieuElements pLieu;
	private final CheminElements pChemin;
	private final QualificationElements pQualification;
	private final ActionElements pAction;
	private final ReponseElements pReponse;
	private final ConditionElements pCondition;
	private final EtatPossessionElements eEtatPossession;
	private final EtatVisibiliteElements eEtatVisibilite;
	private final EtatObligationElements eEtatObligation;
	private final EtatCheminElements eEtatChemin;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ENIGMAGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pJeu = new JeuElements();
		this.pJeuElement = new JeuElementElements();
		this.pJoueur = new JoueurElements();
		this.pConnaissance = new ConnaissanceElements();
		this.pObjet = new ObjetElements();
		this.pTerritoire = new TerritoireElements();
		this.pChoix = new ChoixElements();
		this.pInteraction = new InteractionElements();
		this.pPersonne = new PersonneElements();
		this.pLieu = new LieuElements();
		this.pChemin = new CheminElements();
		this.pQualification = new QualificationElements();
		this.pAction = new ActionElements();
		this.pReponse = new ReponseElements();
		this.pCondition = new ConditionElements();
		this.eEtatPossession = new EtatPossessionElements();
		this.eEtatVisibilite = new EtatVisibiliteElements();
		this.eEtatObligation = new EtatObligationElements();
		this.eEtatChemin = new EtatCheminElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.n7.ENIGMA".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Jeu :
	//    'jeu' name = ID '{'
	//        jeuelement+= JeuElement*
	//    '}';
	public JeuElements getJeuAccess() {
		return pJeu;
	}
	
	public ParserRule getJeuRule() {
		return getJeuAccess().getRule();
	}
	
	//JeuElement :
	//    Territoire | Joueur | Objet | Choix | Connaissance | Lieu | Reponse | Action | Interaction | Personne | Chemin | Condition
	//;
	public JeuElementElements getJeuElementAccess() {
		return pJeuElement;
	}
	
	public ParserRule getJeuElementRule() {
		return getJeuElementAccess().getRule();
	}
	
	//Joueur :
	//    'joueur' name = ID '{'
	//        'limite' limite = INT
	//        'objets' '{'
	//            objets += Objet*
	//        '}'
	//        'connaissances' '{'
	//            connaissances += Connaissance*
	//        '}'
	//    '}';
	public JoueurElements getJoueurAccess() {
		return pJoueur;
	}
	
	public ParserRule getJoueurRule() {
		return getJoueurAccess().getRule();
	}
	
	//Connaissance:
	//    'connaissance' name = ID
	//    qualification = Qualification
	//    // HADCHI TDBL
	//    'etat' etatv = EtatVisibilite etatp = EtatPossession;
	public ConnaissanceElements getConnaissanceAccess() {
		return pConnaissance;
	}
	
	public ParserRule getConnaissanceRule() {
		return getConnaissanceAccess().getRule();
	}
	
	//Objet :
	//    'objet' name = ID "occurrence" occurrence = INT ',' 'de' 'taille' taille = INT
	//    // HADCHI TDBL
	//    'etat' etatv = EtatVisibilite etatp = EtatPossession
	//    ;
	public ObjetElements getObjetAccess() {
		return pObjet;
	}
	
	public ParserRule getObjetRule() {
		return getObjetAccess().getRule();
	}
	
	//Territoire :
	//    'territoire' name = ID '{'
	//        // HADCHI TBDL
	//        'depart' lieuDebut = Lieu
	//        // HADCHI TDBL
	//        'milieu' '{'
	//            lieuxintermediaires += Lieu*
	//        '}'
	//        // HADCHI TDBL
	//        'fin' '{'
	//            lieuxFin += Lieu*
	//        '}'
	//        'chemins' '{'
	//            chemins += Chemin*
	//        '}'
	//    '}';
	public TerritoireElements getTerritoireAccess() {
		return pTerritoire;
	}
	
	public ParserRule getTerritoireRule() {
		return getTerritoireAccess().getRule();
	}
	
	//Choix:
	//    'choix' name = ID '{'
	//        reponses += Reponse*
	//        'conditions' '{'
	//            conditions += [Condition]*
	//        '}'
	//    '}';
	public ChoixElements getChoixAccess() {
		return pChoix;
	}
	
	public ParserRule getChoixRule() {
		return getChoixAccess().getRule();
	}
	
	//Interaction :
	//    'interaction' name = ID '{'
	//        choix = Choix
	//        choixFin = Choix
	//    '}';
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}
	
	//Personne :
	//    // HADCHI TDBL
	//    'personne' name = ID etato = EtatObligation conditiono = [Condition] etatv = EtatVisibilite conditionv = [Condition] '{'
	//        texte = Qualification
	//        (interaction = Interaction)?
	//    '}';
	public PersonneElements getPersonneAccess() {
		return pPersonne;
	}
	
	public ParserRule getPersonneRule() {
		return getPersonneAccess().getRule();
	}
	
	//Lieu :
	//    'lieu' name = ID '{'
	//        ('personnes' '{'
	//            personnes += Personne*
	//        '}')?
	//    '}';
	public LieuElements getLieuAccess() {
		return pLieu;
	}
	
	public ParserRule getLieuRule() {
		return getLieuAccess().getRule();
	}
	
	//Chemin :
	//    // HADCHI TBDL
	//    'chemin' etatc = EtatChemin conditionc = [Condition] etato = EtatObligation conditiono = [Condition] etatv = EtatVisibilite conditionv = [Condition] 'de' precedent = [Lieu] 'a' suivant = [Lieu];
	public CheminElements getCheminAccess() {
		return pChemin;
	}
	
	public ParserRule getCheminRule() {
		return getCheminAccess().getRule();
	}
	
	//Qualification :
	//    qualification = STRING;
	public QualificationElements getQualificationAccess() {
		return pQualification;
	}
	
	public ParserRule getQualificationRule() {
		return getQualificationAccess().getRule();
	}
	
	//Action:
	//    'action' name = ID '{'
	//         'objets' 'c' '{'
	//             objetsconsommables += Objet*
	//         '}'
	//         'objets' 'a' '{'
	//             objetsattribuables += Objet*
	//         '}'
	//         'connaissances' 'a' '{'
	//             connaissancesattribuables += [Connaissance]*
	//         '}'
	//    '}';
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Reponse :
	//    'reponse' '>>' name = ID 'de' 'qualification' texte = Qualification 'avec' action = [Action];
	public ReponseElements getReponseAccess() {
		return pReponse;
	}
	
	public ParserRule getReponseRule() {
		return getReponseAccess().getRule();
	}
	
	//Condition :
	//    'condition' name = ID '{'
	//        'obj' '{'
	//            objetsRequis += Objet*
	//        '}'
	//        'con' '{'
	//            connaissancesRequises += [Connaissance]*
	//        '}'
	//    '}';
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//// HADCHI KAML LT7T TBDL
	//enum EtatPossession returns EtatPossession:
	//    possede = 'possede' | npossede = 'npossede';
	public EtatPossessionElements getEtatPossessionAccess() {
		return eEtatPossession;
	}
	
	public EnumRule getEtatPossessionRule() {
		return getEtatPossessionAccess().getRule();
	}
	
	//enum EtatVisibilite returns EtatVisibilite:
	//    visible = 'visible' | nvisible = 'nvisible';
	public EtatVisibiliteElements getEtatVisibiliteAccess() {
		return eEtatVisibilite;
	}
	
	public EnumRule getEtatVisibiliteRule() {
		return getEtatVisibiliteAccess().getRule();
	}
	
	//enum EtatObligation returns EtatObligation:
	//    obligatoire = 'obligatoire' | nobligatoire = 'nobligatoire';
	public EtatObligationElements getEtatObligationAccess() {
		return eEtatObligation;
	}
	
	public EnumRule getEtatObligationRule() {
		return getEtatObligationAccess().getRule();
	}
	
	//enum EtatChemin returns EtatChemin:
	//    ouvert = 'ouvert' | ferme = 'ferme';
	public EtatCheminElements getEtatCheminAccess() {
		return eEtatChemin;
	}
	
	public EnumRule getEtatCheminRule() {
		return getEtatCheminAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
