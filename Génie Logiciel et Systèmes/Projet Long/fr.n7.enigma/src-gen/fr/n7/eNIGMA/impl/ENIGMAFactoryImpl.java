/**
 * generated by Xtext 2.23.0
 */
package fr.n7.eNIGMA.impl;

import fr.n7.eNIGMA.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ENIGMAFactoryImpl extends EFactoryImpl implements ENIGMAFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ENIGMAFactory init()
  {
    try
    {
      ENIGMAFactory theENIGMAFactory = (ENIGMAFactory)EPackage.Registry.INSTANCE.getEFactory(ENIGMAPackage.eNS_URI);
      if (theENIGMAFactory != null)
      {
        return theENIGMAFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ENIGMAFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ENIGMAFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ENIGMAPackage.JEU: return createJeu();
      case ENIGMAPackage.JOUEUR: return createJoueur();
      case ENIGMAPackage.OBJET: return createObjet();
      case ENIGMAPackage.TERRITOIRE: return createTerritoire();
      case ENIGMAPackage.CHOIX: return createChoix();
      case ENIGMAPackage.INTERACTION: return createInteraction();
      case ENIGMAPackage.PERSONNE: return createPersonne();
      case ENIGMAPackage.LIEU: return createLieu();
      case ENIGMAPackage.CHEMIN: return createChemin();
      case ENIGMAPackage.QUALIFICATION: return createQualification();
      case ENIGMAPackage.ACTION: return createAction();
      case ENIGMAPackage.REPONSE: return createReponse();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Jeu createJeu()
  {
    JeuImpl jeu = new JeuImpl();
    return jeu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Joueur createJoueur()
  {
    JoueurImpl joueur = new JoueurImpl();
    return joueur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Objet createObjet()
  {
    ObjetImpl objet = new ObjetImpl();
    return objet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Territoire createTerritoire()
  {
    TerritoireImpl territoire = new TerritoireImpl();
    return territoire;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Choix createChoix()
  {
    ChoixImpl choix = new ChoixImpl();
    return choix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Interaction createInteraction()
  {
    InteractionImpl interaction = new InteractionImpl();
    return interaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Personne createPersonne()
  {
    PersonneImpl personne = new PersonneImpl();
    return personne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu createLieu()
  {
    LieuImpl lieu = new LieuImpl();
    return lieu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Chemin createChemin()
  {
    CheminImpl chemin = new CheminImpl();
    return chemin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Qualification createQualification()
  {
    QualificationImpl qualification = new QualificationImpl();
    return qualification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Reponse createReponse()
  {
    ReponseImpl reponse = new ReponseImpl();
    return reponse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ENIGMAPackage getENIGMAPackage()
  {
    return (ENIGMAPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ENIGMAPackage getPackage()
  {
    return ENIGMAPackage.eINSTANCE;
  }

} //ENIGMAFactoryImpl
