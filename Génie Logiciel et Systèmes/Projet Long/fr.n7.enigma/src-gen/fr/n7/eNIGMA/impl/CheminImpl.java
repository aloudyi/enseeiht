/**
 * generated by Xtext 2.23.0
 */
package fr.n7.eNIGMA.impl;

import fr.n7.eNIGMA.Chemin;
import fr.n7.eNIGMA.ENIGMAPackage;
import fr.n7.eNIGMA.Lieu;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Chemin</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.eNIGMA.impl.CheminImpl#getPrecedent <em>Precedent</em>}</li>
 *   <li>{@link fr.n7.eNIGMA.impl.CheminImpl#getSuivant <em>Suivant</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CheminImpl extends MinimalEObjectImpl.Container implements Chemin
{
  /**
   * The cached value of the '{@link #getPrecedent() <em>Precedent</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrecedent()
   * @generated
   * @ordered
   */
  protected Lieu precedent;

  /**
   * The cached value of the '{@link #getSuivant() <em>Suivant</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuivant()
   * @generated
   * @ordered
   */
  protected Lieu suivant;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CheminImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ENIGMAPackage.Literals.CHEMIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu getPrecedent()
  {
    if (precedent != null && precedent.eIsProxy())
    {
      InternalEObject oldPrecedent = (InternalEObject)precedent;
      precedent = (Lieu)eResolveProxy(oldPrecedent);
      if (precedent != oldPrecedent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ENIGMAPackage.CHEMIN__PRECEDENT, oldPrecedent, precedent));
      }
    }
    return precedent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Lieu basicGetPrecedent()
  {
    return precedent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrecedent(Lieu newPrecedent)
  {
    Lieu oldPrecedent = precedent;
    precedent = newPrecedent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ENIGMAPackage.CHEMIN__PRECEDENT, oldPrecedent, precedent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu getSuivant()
  {
    if (suivant != null && suivant.eIsProxy())
    {
      InternalEObject oldSuivant = (InternalEObject)suivant;
      suivant = (Lieu)eResolveProxy(oldSuivant);
      if (suivant != oldSuivant)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ENIGMAPackage.CHEMIN__SUIVANT, oldSuivant, suivant));
      }
    }
    return suivant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Lieu basicGetSuivant()
  {
    return suivant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSuivant(Lieu newSuivant)
  {
    Lieu oldSuivant = suivant;
    suivant = newSuivant;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ENIGMAPackage.CHEMIN__SUIVANT, oldSuivant, suivant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ENIGMAPackage.CHEMIN__PRECEDENT:
        if (resolve) return getPrecedent();
        return basicGetPrecedent();
      case ENIGMAPackage.CHEMIN__SUIVANT:
        if (resolve) return getSuivant();
        return basicGetSuivant();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ENIGMAPackage.CHEMIN__PRECEDENT:
        setPrecedent((Lieu)newValue);
        return;
      case ENIGMAPackage.CHEMIN__SUIVANT:
        setSuivant((Lieu)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ENIGMAPackage.CHEMIN__PRECEDENT:
        setPrecedent((Lieu)null);
        return;
      case ENIGMAPackage.CHEMIN__SUIVANT:
        setSuivant((Lieu)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ENIGMAPackage.CHEMIN__PRECEDENT:
        return precedent != null;
      case ENIGMAPackage.CHEMIN__SUIVANT:
        return suivant != null;
    }
    return super.eIsSet(featureID);
  }

} //CheminImpl
