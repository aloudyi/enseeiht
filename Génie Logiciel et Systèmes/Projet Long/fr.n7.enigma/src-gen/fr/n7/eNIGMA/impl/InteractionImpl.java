/**
 * generated by Xtext 2.25.0
 */
package fr.n7.eNIGMA.impl;

import fr.n7.eNIGMA.Choix;
import fr.n7.eNIGMA.ENIGMAPackage;
import fr.n7.eNIGMA.Interaction;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Interaction</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.eNIGMA.impl.InteractionImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.n7.eNIGMA.impl.InteractionImpl#getChoix <em>Choix</em>}</li>
 *   <li>{@link fr.n7.eNIGMA.impl.InteractionImpl#getChoixFin <em>Choix Fin</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InteractionImpl extends JeuElementImpl implements Interaction
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getChoix() <em>Choix</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChoix()
   * @generated
   * @ordered
   */
  protected Choix choix;

  /**
   * The cached value of the '{@link #getChoixFin() <em>Choix Fin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChoixFin()
   * @generated
   * @ordered
   */
  protected Choix choixFin;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InteractionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ENIGMAPackage.Literals.INTERACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ENIGMAPackage.INTERACTION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Choix getChoix()
  {
    return choix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChoix(Choix newChoix, NotificationChain msgs)
  {
    Choix oldChoix = choix;
    choix = newChoix;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ENIGMAPackage.INTERACTION__CHOIX, oldChoix, newChoix);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChoix(Choix newChoix)
  {
    if (newChoix != choix)
    {
      NotificationChain msgs = null;
      if (choix != null)
        msgs = ((InternalEObject)choix).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ENIGMAPackage.INTERACTION__CHOIX, null, msgs);
      if (newChoix != null)
        msgs = ((InternalEObject)newChoix).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ENIGMAPackage.INTERACTION__CHOIX, null, msgs);
      msgs = basicSetChoix(newChoix, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ENIGMAPackage.INTERACTION__CHOIX, newChoix, newChoix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Choix getChoixFin()
  {
    return choixFin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChoixFin(Choix newChoixFin, NotificationChain msgs)
  {
    Choix oldChoixFin = choixFin;
    choixFin = newChoixFin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ENIGMAPackage.INTERACTION__CHOIX_FIN, oldChoixFin, newChoixFin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChoixFin(Choix newChoixFin)
  {
    if (newChoixFin != choixFin)
    {
      NotificationChain msgs = null;
      if (choixFin != null)
        msgs = ((InternalEObject)choixFin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ENIGMAPackage.INTERACTION__CHOIX_FIN, null, msgs);
      if (newChoixFin != null)
        msgs = ((InternalEObject)newChoixFin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ENIGMAPackage.INTERACTION__CHOIX_FIN, null, msgs);
      msgs = basicSetChoixFin(newChoixFin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ENIGMAPackage.INTERACTION__CHOIX_FIN, newChoixFin, newChoixFin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ENIGMAPackage.INTERACTION__CHOIX:
        return basicSetChoix(null, msgs);
      case ENIGMAPackage.INTERACTION__CHOIX_FIN:
        return basicSetChoixFin(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ENIGMAPackage.INTERACTION__NAME:
        return getName();
      case ENIGMAPackage.INTERACTION__CHOIX:
        return getChoix();
      case ENIGMAPackage.INTERACTION__CHOIX_FIN:
        return getChoixFin();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ENIGMAPackage.INTERACTION__NAME:
        setName((String)newValue);
        return;
      case ENIGMAPackage.INTERACTION__CHOIX:
        setChoix((Choix)newValue);
        return;
      case ENIGMAPackage.INTERACTION__CHOIX_FIN:
        setChoixFin((Choix)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ENIGMAPackage.INTERACTION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ENIGMAPackage.INTERACTION__CHOIX:
        setChoix((Choix)null);
        return;
      case ENIGMAPackage.INTERACTION__CHOIX_FIN:
        setChoixFin((Choix)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ENIGMAPackage.INTERACTION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ENIGMAPackage.INTERACTION__CHOIX:
        return choix != null;
      case ENIGMAPackage.INTERACTION__CHOIX_FIN:
        return choixFin != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //InteractionImpl
