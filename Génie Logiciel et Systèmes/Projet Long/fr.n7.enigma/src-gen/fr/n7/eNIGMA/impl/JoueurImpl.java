/**
 * generated by Xtext 2.23.0
 */
package fr.n7.eNIGMA.impl;

import fr.n7.eNIGMA.Connaissance;
import fr.n7.eNIGMA.ENIGMAPackage;
import fr.n7.eNIGMA.Joueur;
import fr.n7.eNIGMA.Objet;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Joueur</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.eNIGMA.impl.JoueurImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.n7.eNIGMA.impl.JoueurImpl#getObjets <em>Objets</em>}</li>
 *   <li>{@link fr.n7.eNIGMA.impl.JoueurImpl#getConnaissances <em>Connaissances</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JoueurImpl extends MinimalEObjectImpl.Container implements Joueur
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getObjets() <em>Objets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjets()
   * @generated
   * @ordered
   */
  protected EList<Objet> objets;

  /**
   * The cached value of the '{@link #getConnaissances() <em>Connaissances</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnaissances()
   * @generated
   * @ordered
   */
  protected EList<Connaissance> connaissances;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JoueurImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ENIGMAPackage.Literals.JOUEUR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ENIGMAPackage.JOUEUR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Objet> getObjets()
  {
    if (objets == null)
    {
      objets = new EObjectContainmentEList<Objet>(Objet.class, this, ENIGMAPackage.JOUEUR__OBJETS);
    }
    return objets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Connaissance> getConnaissances()
  {
    if (connaissances == null)
    {
      connaissances = new EObjectContainmentEList<Connaissance>(Connaissance.class, this, ENIGMAPackage.JOUEUR__CONNAISSANCES);
    }
    return connaissances;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ENIGMAPackage.JOUEUR__OBJETS:
        return ((InternalEList<?>)getObjets()).basicRemove(otherEnd, msgs);
      case ENIGMAPackage.JOUEUR__CONNAISSANCES:
        return ((InternalEList<?>)getConnaissances()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ENIGMAPackage.JOUEUR__NAME:
        return getName();
      case ENIGMAPackage.JOUEUR__OBJETS:
        return getObjets();
      case ENIGMAPackage.JOUEUR__CONNAISSANCES:
        return getConnaissances();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ENIGMAPackage.JOUEUR__NAME:
        setName((String)newValue);
        return;
      case ENIGMAPackage.JOUEUR__OBJETS:
        getObjets().clear();
        getObjets().addAll((Collection<? extends Objet>)newValue);
        return;
      case ENIGMAPackage.JOUEUR__CONNAISSANCES:
        getConnaissances().clear();
        getConnaissances().addAll((Collection<? extends Connaissance>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ENIGMAPackage.JOUEUR__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ENIGMAPackage.JOUEUR__OBJETS:
        getObjets().clear();
        return;
      case ENIGMAPackage.JOUEUR__CONNAISSANCES:
        getConnaissances().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ENIGMAPackage.JOUEUR__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ENIGMAPackage.JOUEUR__OBJETS:
        return objets != null && !objets.isEmpty();
      case ENIGMAPackage.JOUEUR__CONNAISSANCES:
        return connaissances != null && !connaissances.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //JoueurImpl
